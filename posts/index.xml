<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Jesús Pérez</title>
        <link>https://masher2.github.io/posts/</link>
        <description>Recent content in Posts on Jesús Pérez</description>
        <generator>Hugo -- gohugo.io</generator>
        <lastBuildDate>Sat, 04 Apr 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://masher2.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Interesting things I saw this week - 2</title>
            <link>https://masher2.github.io/posts/2020/04/interesting-things-i-saw-this-week-2/</link>
            <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
            
            <guid>https://masher2.github.io/posts/2020/04/interesting-things-i-saw-this-week-2/</guid>
            <description type="html"><![CDATA[


<p>This was a slow week, between my internet being at the absolute worst speed possible and almost all my free time spent playing Digimon Story: Cyber Sleuth (DSCS) on my Nintendo Switch I didn’t manage to find much, nontheless here are a few interesting things that I thought worth sharing.</p>
<ul>
<li><p><a href="https://www.gq.com/story/coronavirus-fast-fashion-dana-thomas">[blog post] “It’s collapsing violently”: Coronavirus is creating a fast fashion nightmare</a>: An interview with Dana Thomas about the impact of coronavirus in the fast fashion industry.</p>
<p>It is incredible to see how the fast fashion industry operates and how people are oblivious about how everything is made. The globalized system makes it appear as if everything is made out of thin air and nothing could be farther from the truth. The manufacture of clothes is one of the few things that can’t be automated, and the compulsory desire for cheap clothing in gargantuan quantities has made the clothing industry an industry that can only survive due to modern day slavery.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=1MpfEeSem_4">[video] Food Waste causes Climate Change. Here’s how we stop it</a>: A video essay about the problem of food waste.</p>
<p>The video shows some key factors that affect the quantity of food that becomes waste in each stage of the supply chain. One of the most shocking is the expiration date in some of the food, an arbitrary date made mostly to add a sense of urgency for the consumer to buy the product, not necessarily because the food goes bad after that date.
It also shows some possible actions to mitigate the food waste in some stages.</p></li>
<li><p><a href="https://kotaku.com/pokemon-is-fine-but-digimon-story-cyber-sleuth-is-one-1839230688">[blog post] Pokémon is fine, but Digimon Story Cyber Sleuth is one of the best monster RPGs you can play</a>: A commentary piece on what makes DSCS so good.</p>
<p>I am an avid Digimon fan and I love JRPGs, I had been waiting for a Digimon RPG for ages since I played Digimon World: Dawn on my Nintendo DS but DSCS and its successor came out on the PSvita; the PS exclusives don’t interest me and buying a console just for two games is not a sound financial decision, so I believed I wouldn’t be able to play those games, until a few months ago when Digimon Story Cyber Sleuth Complete Edition was announced for the Switch, only a new Metroid announcement could have had me more hyped than a Digimon one, specially this one with the two games in the same package.</p>
<p>I was going to get a physical copy but when I was ready to buy it life happened and a few weeks later the covid-19 got us all trapped inside our homes. Fortunately it was on 30% off in the e-shop a couple weeks ago and I didn’t think twice about it.
There is something in getting your favourite digimon in a team and beating other digimon in turn based battles that I can’t describe, it’s just everything I need.</p>
<p>This game is an absolute gem, If you have a Switch you should check this out. Or at least read the post if you can’t understand why someone could prefer Digimon over Pokémon.</p></li>
</ul>
]]></description>
            
        </item>
        
        <item>
            <title>Interesting things I saw this week - 1</title>
            <link>https://masher2.github.io/posts/2020/03/interesting-things-i-saw-this-week/</link>
            <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
            
            <guid>https://masher2.github.io/posts/2020/03/interesting-things-i-saw-this-week/</guid>
            <description type="html"><![CDATA[


<p>I had been planning to blog more but I haven’t had the motivation to do so, so instead of focusing all my mental energy into a single topic that I just didn’t have so much to talk about or doing a project that really wasn’t as fun as I thought it could be I will be sharing here a few interesting things (and my comments on some of those things) that I have seen on a weekly basis (hopefully).</p>
<p>I have some strong opinions about the global system that we live in and those opinions will leak through my commentaries on these links, I hope you enjoy it.</p>
<ul>
<li><p><a href="https://vicki.substack.com/p/all-numbers-are-made-up-some-are">[blog post] All numbers are made up, some are useful</a>: An article about how every number that we consider as a true representation of reality or as truth itself is wrong, not necessarily bad, but wrong; some because of the concepts they represent are ill-defined or simply because of the limitations of our understanding of the matter in question.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=AiPWKHBR9wI">[video] How ExxonMobil controls our lives</a>: An interesting video about the environmental damage ExxonMobil has done and it’s complete disregard for everything except profit. There is something called the “resource curse” that says that “the greater a country’s dependence on oil and mineral resources, the worse its [economic] growth performance”.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=vPRySy3Qtvs">[video] Growing Roots - This Farmer Is Taking Root On Your Rooftops // Discovery on Viddsee</a>: A small documentary of some urban farms in Singapore.</p>
<p>The recent need for locally sourced food has become mainstream due to the age of information that we currently live in; the abstraction of the food industry, the industrialized aggriculture, could be installed as the de-facto way to obtain food due to the fact that the information wasn’t as readily available to the people in general as fast as it is now, the people could only see how the food was cheaper and more available without even thinking about what was better for the environment or even for the human itself.
The video shows some ways that the people in Singapore have found to get out, at least in some part, of the illusion of the globalized food system. You can’t optimize the ecosystem for economic growth.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=geBQNOid_7A">[video] Roads should be abolished!</a>: Luke Smith ranting about roads, explaining how roads affect the development of urban areas and how having a car became almost mandatory because of them.</p>
<p>Because of what he exposes there one could see why food deserts exists in USA and how that has impacted indirectly the ability of a portion of their population to get out of poverty.
Also mentions how turism is an idea void of meaning because when people travel they think they are learning about the world when most of the time they are having the same experiences at home but superficially different. Interesting stuff.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=LRVmfx4EWI0">[video] You’ll never go wrong choosing Independence! (NEETs rule, Wagies drool!)</a>: Luke Smith talking about how he aproaches most of his decisions, and how the system, building on top of the abstraction of independence (i.e. money) has made everyone too much dependent on the system itself, and it’s when the system fails that the dependence and the limitations it imposes on the people becomes obvious.</p></li>
</ul>
]]></description>
            
        </item>
        
        <item>
            <title>Writing a data pipeline in R for streaming tweets</title>
            <link>https://masher2.github.io/posts/2019/11/writing-a-data-pipeline-in-r-for-streaming-tweets/</link>
            <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
            
            <guid>https://masher2.github.io/posts/2019/11/writing-a-data-pipeline-in-r-for-streaming-tweets/</guid>
            <description type="html"><![CDATA[


<p>Inspired by <a href="https://www.datacamp.com/community/tutorials/building-a-tweet-etl-pipeline-using-r">this datacamp post</a> and the current events happening in Chile I decided to give it a try to make my own version of a tweet streaming script, with the intention of using it when another event of that magnitud happens and maybe getting some useful insights then, or maybe not, at least I had fun while doing this.</p>
<div id="setting-up-the-structure-of-the-script" class="section level1">
<h1>Setting up the structure of the script</h1>
<p>The first thing I did was plan how to structure the script. I decided to structure separate the process in three functions, one for each letter of ETL (imaginative, ikr). The whole script would look like this:</p>
<pre class="r"><code># Extract
get_tweets &lt;- function() {}

# Transform
transform_tweets &lt;- function() {}

# Load
load_tweets &lt;- function() {}

main &lt;- function() {
  get_tweets()
  transform_tweets()
  load_tweets()
}

# Run everything
main()</code></pre>
<p>I won’t be updating the full script in-post as it would occupy too much space, you can look at the finished product <a href="https://github.com/masher2/twitter-etl">here in this github repo</a>.</p>
</div>
<div id="connecting-to-the-twitter-api-and-streaming-the-tweets" class="section level1">
<h1>Connecting to the twitter API and streaming the tweets</h1>
<p>After designing the script it is time to start filling those empty functions, I started with the streaming of tweets as it is the logical first step.</p>
<p>To properly use the <code>rtweet</code> package one must create a new app in the twitter developer options, find the keys and secrets and store them somewhere, after that tedious process is done I store the account and access keys/secrets into the <code>.Renviron</code> file, which ended up like this:</p>
<pre class="r"><code>TW_CONSUMER_KEY=&#39;wow&#39;
TW_CONSUMER_SECRET=&#39;so secret&#39;
TW_ACCESS_TOKEN=&#39;much private&#39;
TW_ACCESS_SECRET=&#39;wow&#39;</code></pre>
<p>Then creating the token for the session becomes super easy and portable:</p>
<pre class="r"><code>token &lt;- rtweet::create_token(
  app = &#39;app&#39;,
  consumer_key = Sys.getenv(&#39;TW_CONSUMER_KEY&#39;),
  consumer_secret = Sys.getenv(&#39;TW_CONSUMER_SECRET&#39;),
  access_token = Sys.getenv(&#39;TW_ACCESS_TOKEN&#39;),
  access_secret = Sys.getenv(&#39;TW_ACCESS_SECRET&#39;)
)</code></pre>
<p>Writing the body of the <code>get_tweets</code> function was easy too, it ended up being just a wrapper around <code>rtweet::stream_tweets</code> creating a unique filename for the stream data and returning it to use it in the next step. I decided to go with that approach because there is no way (at least that I found) to call functions directly to the messages received, wich could be nice to load data to the database in real time, but whatever, we don’t need real time data in the database anyway.</p>
<p>Here is how <code>get_tweets</code> turned out:</p>
<pre class="r"><code>get_tweets &lt;- function(keys, timeout = 600, raw_data_dir = &quot;raw_data&quot;) {
  filename &lt;- file.path(
    raw_data_dir,
    paste0(&quot;stream_&quot;, format(Sys.time(), &quot;%Y%m%d_%H%M%S&quot;), &quot;.json&quot;)
  )
  rtweet::stream_tweets(
    q = keys,
    timeout = timeout,
    parse = FALSE,
    file_name = filename,
    verbose = TRUE
  )

  filename
}</code></pre>
</div>
<div id="parsing-the-streams" class="section level1">
<h1>Parsing the streams</h1>
<p>After the E was done, it was turn for the T portion. The function reads the tweet data from the file we stored the stream in and then process it.</p>
<p>There is a bunch of data that comes with every tweet, I thought about saving it all but after a first look I realized that there are some fields that I don’t consider important with the intention of analyzing what the people is saying about a current live event; so I just deleted the retweets, kept only the tweets that were in spanish, processed the tweet content and the quoted content, removed duplicated tweets and returned the parsed dataframe.</p>
<p>The variables that I considered important for that specific use case were:</p>
<ul>
<li><code>created_at</code>: time is always important.</li>
<li><code>screen_name</code>: to see which users tweeted the most and what.</li>
<li><code>content</code>: self explainatory.</li>
<li><code>source</code>: from which device are the people tweeting from.</li>
<li><code>location</code>: where are the people tweeting from.</li>
<li><code>quoted_user</code>: if the tweet is a quoting somebody, who is the user quoting?</li>
<li><code>quoted_content</code>: what did the other user tweeted (twote?) about?</li>
</ul>
<p>The function ended up like this:</p>
<pre class="r"><code>transform_tweets &lt;- function(filename) {
  df &lt;- rtweet::parse_stream(filename, verbose=FALSE)
  df &lt;- dplyr::filter(df, !is_retweet, lang == &quot;es&quot;)
  df &lt;- dplyr::transmute(
    df,
    date_created = created_at,
    user = screen_name,
    content = text,
    source = source,
    location = location,
    quoted_user = quoted_screen_name,
    quoted_content = quoted_text
  )
  df &lt;- dplyr::mutate_at(
    df,
    vars(content, quoted_content),
    function(text) {
      text = text %&gt;% 
        # coerce to lower case all the words
        stringr::str_to_lower() %&gt;%
        # remove links
        stringr::str_remove_all(&quot;\\s?(f|ht)(tp)(s?)(://)([^\\.]*)[\\.|/](\\S*)&quot;) %&gt;%
        # remove mentions of other users
        stringr::str_remove_all(&quot;@\\w+&quot;) %&gt;%
        # remove stopwords
        tm::removeWords(tm::stopwords(&quot;spanish&quot;)) %&gt;%
        # trim all whitespaces
        stringr::str_squish()
    }
  )
  df &lt;- dplyr::filter(df, !duplicated(content))

  df
}</code></pre>
<p>I’m not keen on using pipes <code>%&gt;%</code> inside a function’s body but in that case it made the processing of the tweets so much legible that I couldn’t not use it. Also, I removed the mentions inside the tweets to filter out copypasted responses to multiple people.</p>
</div>
<div id="loading-to-the-database" class="section level1">
<h1>Loading to the database</h1>
<p>E and T ready, now for the L. Maybe the easiest part of this ETL is the loading, just connet to the database, write the processed tweets to it and close the connection, easy peasy.</p>
<pre class="r"><code>load_tweets &lt;- function(tweets, database = &quot;tweets.db&quot;) {
    conn &lt;- DBI::dbConnect(RSQLite::SQLite(), database)
    DBI::dbWriteTable(conn, &quot;tweet_data&quot;, tweets, append = TRUE)
    DBI::dbDisconnect(conn)
}</code></pre>
<p>Everything seems ready now…</p>
</div>
<div id="oh-wait-we-dont-have-a-database" class="section level1">
<h1>Oh wait, we don’t have a database…</h1>
<p>After all the work we did to get tweets from the twitter database to ours I have just now realized I have not made a database to store our precious data.</p>
<p>I decided to make a function that sets up the database to avoid writing again those commands in case I decided to delete the file or if any other person would like to use the script. It is super simple, connect to the database, execute the command to create the table and disconnect, the sqlite file is ready.</p>
<pre class="r"><code>setup_database &lt;- function(database = &quot;tweets.db&quot;) {
  conn &lt;- DBI::dbConnect(RSQLite::SQLite(), database)
  DBI::dbExecute(
    conn,
    &quot;CREATE TABLE tweet_data(
      tweet_id INTEGER PRIMARY KEY,
      date_created INTEGER,
      user TEXT,
      content TEXT,
      source TEXT,
      location TEXT,
      quoted_user TEXT,
      quoted_content TEXT
    )&quot;
  )
  DBI::dbDisconnect(conn)
}</code></pre>
<p>I chose sqlite because I really haven’t used it before, the tutorial I was following used sqlite and it truly is easy AF (and fun) to set up.</p>
</div>
<div id="making-it-a-cli" class="section level1">
<h1>Making it a CLI</h1>
<p>Now, everything else ready, what can I do to make this script truly a usable piece of software? All my friends know that I am a linux enthusiast and that I love the terminal so much that I ditched RStudio (ahhh, the horror) in favor of nvim and the incredibly made <a href="https://github.com/jalvesaq/Nvim-R">Nvim-R plugin</a> (More on this in a future post), so the obvious path was to make a full CLI for it, luckily for me there is a package that handles that perfectly, <code>optparse</code>.</p>
<p>Using <code>optparse</code> I added the following options to the script:</p>
<ul>
<li><code>--database</code>: defaults to “tweets.db”, and it is the name od the database to create or connect to.</li>
<li><code>--keys</code>: the search query for the tweets to be stramed, I used the default: “#chile,#chiledesperto,#santiago” but I intend to make it a mandatory positional argument to increase the flexibility, but that default is ok for our purposes.</li>
<li><code>--initial-setup</code>: if this flag is used just run <code>setup_database</code> and end the script.</li>
<li><code>-f</code> | <code>--force-stream</code>: if this flag is used with <code>--initial-setup</code> stream the tweets afterwards.</li>
<li><code>--raw-data-dir</code>: defaults to “raw_data”, and its the name of the folder that will hold all the raw data streams.</li>
<li><code>-c</code> | <code>--stream-chunks</code>: the number of times the stream will be done, the default, 5, means that the ETL process will be run five times.</li>
<li><code>-t</code> | <code>--stream-timeout</code>: for how long to run the streaming of tweets, the default is 60, meaning that each stream session will be just one minute long.</li>
</ul>
<p>One thing that I didn’t mention is that the ETL process will be run a few times, streaming, processing, loading the tweets and then automatically repeating that for a set number of times, I used the term “stream chunks” because naming is difficult, but it could be named anything else, that name is not final.</p>
</div>
<div id="adding-safety-checks-and-logging" class="section level1">
<h1>Adding safety checks and logging</h1>
<p>We are almost ready, there are a few things that can go wrong with our script:</p>
<ol style="list-style-type: decimal">
<li>The database file could exist when setting it up, and we could possibly overwrite the data we have.</li>
<li>The raw data directory could not exist and then we could not save the streams to anywhere.</li>
<li>There could be no tweets streamed at all, causing problems in the T and L.</li>
</ol>
<p>For all those problems we have the solution, just check for those conditions before running the body of the corresponding function and we should be safe, there could be more possible problems lurking around but I did not find any more.</p>
<p>Another thing is that we don’t actually know what is part of the process is running at any given time, we just know that the console is locked, there could be a slient problem that we are not aware of just because of that, but there is always a solution: <code>futile.logger</code>.</p>
<p>A package that adds logging capabilities similar to the python logging module but in R, what a time to be alive. Just add a few calls to <code>flog.info</code> and <code>flog.debug</code> and we are ready to go!</p>
</div>
<div id="the-end" class="section level1">
<h1>The end… ?</h1>
<p>This is it, the data pipeline, or ETL, I feel that pipeline is just another buzzword used to mistify simple stuff; is ready, now I will play with this someday, maybe add more suff to it, change other things or add a second part to this as a sort of continuation to the idea that led me to creating it in the first place.</p>
<p>The code for this project <a href="https://github.com/masher2/twitter-etl">is here</a>, feel free to give me your feedback on <a href="https://github.com/masher2">github</a>, or <a href="https://twitter.com/Masher_2">twitter</a> :)</p>
</div>
]]></description>
            
        </item>
        
        <item>
            <title>Adobe&#39;s Venezuela ban and why libre software is the solution</title>
            <link>https://masher2.github.io/posts/2019/10/adobe-s-venezuela-ban-and-why-libre-software-is-the-solution/</link>
            <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
            
            <guid>https://masher2.github.io/posts/2019/10/adobe-s-venezuela-ban-and-why-libre-software-is-the-solution/</guid>
            <description type="html"><![CDATA[


<p>On October 7th there was an announcement by the proprietary software giant Adobe to ban al Venezuelan users from using any of its services, not even giving them a refund.<a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a> Such announcement came seemingly out of nowhere, following an executive order that doesn’t really impede them from having business relationships with individual venezuelan citizens but with the “Goverment of Venezuela”.</p>
<p>The implications of such action are absolutely detrimental, as most of the creative workers use or depend on Adobe software. That is to be expected though, as Adobe software is practically an industry standard and using anything that isn’t from Adobe for that kind of work is not as common as it should be.</p>
<p>So, what should a person trying to earn a decent income in the creative world should resort to after getting prema-banned from using the most common, known, and arguably powerful tools in that area? I know what crosses the mind of any individual in that place: Piracy. But that should not be the way.</p>
<p>Legal and moral affairs apart, piracy should never be an option, it doesn’t solve the fundamental flaw that drove the person to it in the first place: the lack of ownership of your software.</p>
<p>Propietary software is owned only by the company that develops it (the proprietor), the copy that resides in your machine or in the browser through yout account is just a leased version of the software, your rights are limited in a way that gives the proprietor absolute power over it and leaves you completely vulnerable to events like this one. Piracy doesn’t magically makes you own the software, it only makes your leased copy work (maybe partially) and nothing more, maybe an update will make your copy stop working again.</p>
<p>The best alternative is libre software, software that respects your freedom to use it as you wish, without discriminating against your nationality or your purchasing power. However, libre software is often overlooked by professionals and inexperienced alike for being free of cost, gratis; as if for being free it means it is subpar software.</p>
<p>There is a certain degree of truth that proprietary software is more polished and more featureful, as any project should be if it has the resources of Adobe to maintain it; nevertheless libre alternatives to Adobe software are very well developed and most would be powerful enough for most creatives out there.</p>
<p><a href="https://www.youtube.com/watch?v=doBR1Ae78aw">Here</a> is a good list of libre alternatives to the Adobe Creative Suite, the video is targeted to linux users but as with most libre software it is available in both Windows and MacOS also.</p>
<p>The point of libre software is not that it is free of cost, the point is that it respects your freedom to use it as you wish, doesn’t push the interests of the creators of the software over the interests of its users and will always be transparent in its inner workings.</p>
<p>I want to end this with a quote by Linus from LinusTechTips that resumes everything that is wrong with the current state of software:</p>
<p>“So, this sucks for venezuelans but it also kind of has the potential to suck for everyone because this is a reminder of the predicament that we’ve gotten ourselves into by creating a world that is dependant on subscription services.” - Linus <a href="https://www.youtube.com/watch?v=tLUALcR2UP4">techlinked</a></p>
<div class="footnotes">
<hr />
<ol>
<li id="fn1"><p>Only to clarify a few days later that refunds will be offered to venezuelan customers that purchased directly from Adobe and that Behance social media platfrom will continue to be available to them.<a href="#fnref1" class="footnote-back">↩︎</a></p></li>
</ol>
</div>
]]></description>
            
        </item>
        
        <item>
            <title>Crypto, banking, and spending money in Venezuela</title>
            <link>https://masher2.github.io/posts/2019/08/crypto-banking-and-spending-money-in-venezuela/</link>
            <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
            
            <guid>https://masher2.github.io/posts/2019/08/crypto-banking-and-spending-money-in-venezuela/</guid>
            <description type="html"><![CDATA[


<p>Today I saw <a href="https://www.youtube.com/watch?v=aDjww6VAKM8">Universal Access to Basic Finance</a> by Andreas M. Antonopoulos, he starts the talk saying that when visiting Argentina in 2013 for the first time he didn’t need to explain “why, why bitcoin, why open blockchains, why freedom of finance”, that is because all the people in the conference room were interested in the “how”, because they already understanded the “why”; those opening words struck me, because here in Venezuela, at least in the kind of environment I am and the kind of people I know, most of us already know the “why”: The Bolivar Soberano (VES).</p>
<p>After two moneraty reconversions, the first in 2008 removing three zeros, the second last year (2018) removing five more, the VES is nothing more than a bad joke to all of us that remain in the country<a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a>. This has led people to use the US Dollar (USD) as a preferred currency as its value stays stable in time compared to the VES.</p>
<p>The problem then arises, food is mostly traded in VES, while goods like smartphones, shoes, and home appliances are preferably traded in USD because holding such an amount of VES would be too risky<a href="#fn2" class="footnote-ref" id="fnref2"><sup>2</sup></a> or even plain impossible for an individual to obtain (at the time of writing 1 USD ≈ 14000 VES). Add to the problem the insecurity and carrying 500 USD in one’s pocket while using public transportation is not something anybody would want to do. Living through this it’s only natural to gravitate towards cryptocurrency, even with its volatility, Bitcoin (BTC) is a safer place to hold your money than in VES in a bank account.</p>
<p>Returning to the talk, mr Antonopoulos explains how the banking system keeps the unbanked poor, making their life unnecessarily difficult by denying them basic financial services and sentencing them to cash only and higher fees for things like sending money to someone. For someone like me, who has never left Venezuela and thus has never had the opportunity to open an account in any other currency that is not the Bolivar, spending money in an economy where you either need a suspiciously huge<a href="#fn3" class="footnote-ref" id="fnref3"><sup>3</sup></a> amount of VES in your account or need a dangerous amount of USD in your pocket is particularly challenging. That is not the only way though, as many stores (WAY more than those who accept crypto) accept not only VES or cash USD but <a href="https://www.zellepay.com/">Zelle</a>, a payment system between USA bank accounts; I, who am paid mostly in crypto<a href="#fn4" class="footnote-ref" id="fnref4"><sup>4</sup></a>, find very difficult spending my money in my home country.</p>
<p>Earlier this week I was in a “technology mall” in Caracas trying to buy a smartphone for my uncle, I asked in almost every store in that shopping mall asking if they accepted any form of cryptocurrency, something like an hour and more or less 30 stores later I found only one little store that accepted crypto; only one store, in a shopping mall dedicated almost to tech stores, accepted the (arguably) easiest and safest way for a venezuelan who has never left the country to use his money.</p>
<p>Another interesting idea that mr Antonopoulos spoke about was the “false idea of safety through totalitarian control”, the idea that through massive surveillance of the population all crime will be thwarted, but just as George Orwell depicts in 1984, surveillance only hurts the good people being surveilled, there will always be people powerful enough to avoid surveillance, or at least its consecuences, we as venezuelans know first hand that fact<a href="#fn5" class="footnote-ref" id="fnref5"><sup>5</sup></a>.</p>
<p>Nevertheless not everything is bad, as more people talk about crypto more stores will realize there is an oportunity there and will dive into it. I’ll keep asking in every store I enter if they accept crypto, and will keep spreading the word of libre software, because if people don’t know there is an alternative to the systems they are accustomed to they can’t make different choices with how they live their lives.</p>
<div class="footnotes">
<hr />
<ol>
<li id="fn1"><p>A recurring joke between my friends is that we will become millionaires before the year ends, as we find ourselves holding more hundreds of thousands of VES just for weekly expenses.<a href="#fnref1" class="footnote-back">↩︎</a></p></li>
<li id="fn2"><p>This price tag made me laugh, it’s amazing seeing the price also in Bolivares Fuertes (VEF) as it quickly became too confusing to compare to after the VES reconversion. Realizing that a ~50 USD faucet is worth 67 billions VEF or 67 trillion plain Bolivares (before the first reconversion) is bewildering. <img src="/posts/crypto-banking-and-spending-money-in-venezuela/faucet.jpeg" alt="675 thousand VES faucet" height="400"/><a href="#fnref2" class="footnote-back">↩︎</a></p></li>
<li id="fn3"><p>Related to the surveillance economy that I touch briefly later in the post.<a href="#fnref3" class="footnote-back">↩︎</a></p></li>
<li id="fn4"><p>Not really crypto but <a href="https://uphold.com/">uphold</a>, which is basically crypto<a href="#fnref4" class="footnote-back">↩︎</a></p></li>
<li id="fn5"><p>Even though, few people know about ways to reduce the digital surveilance imposed to us, and most of those people prefer convenience over privacy.<a href="#fnref5" class="footnote-back">↩︎</a></p></li>
</ol>
</div>
]]></description>
            
        </item>
        
    </channel>
</rss>
